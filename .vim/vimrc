set nocompatible
filetype off

"Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
Plug 'tpope/vim-sensible'
Plug 'vim-airline/vim-airline'
Plug 'guns/xterm-color-table.vim'
"Plug 'jnurmine/Zenburn'
Plug 'tmhedberg/SimpylFold'             " Python
Plug 'vim-scripts/indentpython.vim'     " Python auto-indentation
Plug 'Valloric/YouCompleteMe'           " Python auto-complete
Plug 'scrooloose/syntastic'             " syntax checking/highlightin
Plug 'nvie/vim-flake8'                  " PEP8 checking
Plug 'scrooloose/nerdtree'              " NERDTree
Plug 'jistr/vim-nerdtree-tabs'          " tabs for NERDTree
Plug 'kien/ctrlp.vim'                   " super searching
Plug 'tpope/vim-fugitive'               " Git integration

" List ends here. Plugins become visible to Vim after this call.
call plug#end()
"run :PlugInstall 	# install plugins
"run :PlugUpdate	# update plugins
"run :PlugUpgrade       # upgrade plug manager

let g:airline_powerline_fonts = 1
let g:SimpylFold_docstring_preview=1    " see docstrings for folded code
let g:ycm_autoclose_preview_window_after_completion=1
let python_highlight_all=1
let NERDTreeIgnore=['\.pyc$', '\~$']    " ignore files in NERDTree

"------------------------------------------------------------------------------
" KEY MAPPINGS
"------------------------------------------------------------------------------
" Map Y to act like D and C, i.e. yank until EOL
map Y y$

map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>
" Enable folding with spacebar
nnoremap <space> za

let mapleader = "-"

" Split navigations
" ALT-j move to the split below... etc.
"nnoremap <C-H> <C-W><H>
"nnoremap <C-J> <C-W><J>
"nnoremap <C-K> <C-W><K>
"nnoremap <C-L> <C-W><L>
nmap <C-H> <C-W>h
nmap <C-J> <C-W>j
nmap <C-K> <C-W>k
nmap <C-L> <C-W>l

noremap <leader>ev :edit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

autocmd BufNewFile,BufRead *.py   " PEP8 Python Indentation
  \ set tabstop=4 |
  \ set softtabstop=4 |
  \ set shiftwidth=4 |
  \ set textwidth=79 |
  \ set expandtab |
  \ set autoindent |
  \ set fileformat=unix

" NOT WORKING ***
" Flagging unecessary whitespace
"autocmd BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" Python with virtualenv support
"py << EOF
"import os
"import sys
"if 'VIRTUAL_ENV' in os.environ:
"  project_base_dir = os.environ['VIRTUAL_ENV']
"  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
"  execfile(activate_this, dict(__file__=activate_this))
"EOF

syntax on
set noswapfile
set hidden

" Show partial commands in the last line of the screen
set showcmd

" Quickly time out on keycodes, but never on mappings
set notimeout ttimeout ttimeoutlen=200

set hlsearch
"set incsearch alreade set in tpope/vim-sensible

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Set certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Ask to save changes instead of error
set confirm

" Use visual bell instead of beeping on error
set visualbell
set t_vb=

" Enable use of the mouse for all modes
set mouse=a

" Set command window height to 2 lines, avoid "press <Enter> to continue"
set cmdheight=2

" Use <F11> to toggle between 'paste' and 'nopaste'
set pastetoggle=<F11>

" Break line at a word boundry
set linebreak

set shiftwidth=2
set softtabstop=2
set expandtab

" Highlight trailing whitespace
" Cool! Applications > Accessories > Character Map
" This one is from Common
set list listchars=tab:\ \ ,trail:â€¢

set t_Co=256

"colorscheme twilight
colorscheme distinguished
"colorscheme default

set number
set relativenumber
highlight LineNr ctermbg=234 ctermfg=240

" Highlight the current line
" cterm=NONE removes underline!
set cursorline
highlight CursorLine ctermbg=234 cterm=NONE
highlight CursorLineNr ctermbg=234 ctermfg=11
"autocmd InsertEnter * highlight CursorLine ctermbg=#000050 ctermfg=fg
"autocmd InsertLeave * highlight CursorLine ctermbg=#005000 ctermfg=fg

" Always highlight column 80 so it's easier to see
"autocmd BufWinEnter * highlight ColorColumn cterbg=darkred
set colorcolumn=80
highlight colorcolumn ctermbg=234

" Redraw only when needed (i.e. dont' redraw when executing a macro)
set lazyredraw

" highlight matching [{()}] when cursor placed on start/end character
set showmatch

" Enable folding
set foldmethod=indent
set foldlevel=99

set clipboard=unnamed           " allow access to system clipboard


source ~/.vim/scripts/cyclecolor.vim
